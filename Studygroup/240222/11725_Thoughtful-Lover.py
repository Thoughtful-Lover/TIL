'''
11725. 트리의 부모 찾기

루트 없는 트리
이때 루트가 1일 때 각 노드의 부모를 구하는 프로그램

첫째 줄에 노드의 개수 N (2 ≤ N ≤ 100,000)
둘째 줄부터 N-1개의 줄에 트리 상에서 연결된 두 정점
'''


'''처음에 파이참에서 돌려봤을 때, 뒤죽박죽으로 나와서 잘 살펴보니 애초에 루트가 없는 트리에 루트를 1로 지정한 것이었어서
루트가 1일 때 조건을 문제에 적용시키어 결과값을 출력하는게 중요 !'''
import sys

N = int(sys.stdin.readline())
# 트리의 깊이를 저장하는 d
d = [-1] * (N+1)
# 루트를 1이라고 하기로 했으므로 0 을 지정
d[1] = 0
# 조상 노드를 저장해 줄 anc
anc = [0] * (N+1)
for i in range(N-1):
    # 조상을 p, 자식을 c
    p, c = map(int, sys.stdin.readline().split())
    # 만약 깊이가 더 낮은게 p 로 되어 있으면 자리를 바꿔준다.
    if d[p] < d[c]:
        p,c = c, p

    anc[c] = p
    d[c] = d[p] + 1

# for j in range()

for k in range(2, N+1):
    print(anc[k])